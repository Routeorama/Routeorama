@inject IPlaceService PlaceService;
@inject IJSRuntime _runtime;
@inject NavigationManager NavigationManager;
@inject IPostService PostService;

@page "/channel"
@using Routeorama.Data
@using Routeorama.Models.Post
<AuthorizeView>
    <Authorized>
        <Nav/>
        <div class="everything-place">
            <div class="place">
                <h1>
                    @place.name
                </h1>
                <h1>
                    @place.description
                </h1>
            </div>
            <div class="weather-description" id="description"/>
            <div class="degrees" id="temp"/>
            <div class="feels-like_degrees" id="feels_like"/>
            <div class="pressure" id="pressure"/>
            <div class="location" id="location"/>
            <div class="sunrise" id="sunrise"/>
            <div class="sunset" id="sunset"/>
            <div class="buttonCreatePlace">
                <button type="button" href="javascript:void(0)"
                        onclick="document.getElementById('light').style.display='block';document.getElementById('fade').style.display='block'">
                    Create a post
                </button>
            </div>
        </div>

        <div id="light" class="white_content">
            <button class="XButton" type="button" href="javascript:void(0)"
                    onclick="document.getElementById('light').style.display='none';document.getElementById('fade').style.display='none'">
                Close
            </button>
            <div class="tittle">
                Create your post :D
                <label for="title">Title</label>
                <input type="text" name="title" size="30" @bind-value="@title">
                <label for="content">Content</label>
                <textarea type="text" name="content" rows="5" cols="50" @bind="@content"></textarea>
                <label for="photo">Photo</label>
                <input type="text" name="photo" size="30" @bind-value="@photo">
                <label for="error" @bind="@error"></label>
            </div>
            <button class="CreateButton" type="button" href="javascript:void(0)"
                    @onclick="createNewPost">
                Create a post
            </button>
        </div>
        <div id="fade" class="black_overlay"></div>
    </Authorized>
    <NotAuthorized>
        <Login/>
    </NotAuthorized>
</AuthorizeView>

@code {
    private Place place = new Place();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            place = await PlaceService.FetchPlaceData();
            await _runtime.InvokeVoidAsync("fetchWeather", place.location.lat, place.location.lng);
        }
        catch (NullReferenceException ex)
        {
            Console.WriteLine(ex);
        }
    }
    private string? title;
    private string? content;
    private string? photo;
    private string? error;

    private async void createNewPost()
    {
        Post post = new Post
        {
            postId = 0, title = title, content = content, photo = photo, likeCount = 0, dateOfCreation = null, placeId = place.id
        };

        Console.WriteLine(post);

        try
        {
            await PostService.CreateNewPost(post);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}