@using Routeorama.Authentication
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider

<div class="navigation">
    <div class="navigation-left">
        <img class="logo" src="icons/camping.gif"/>
        <Search/>
    </div>
    <div class="navigation-center">
        <div class="nav-img-container" @onclick="NewsFeedRedirect">
            <img alt="newsfeed" src="icons/newsfeed.svg">
        </div>
        <div class="nav-img-container" @onclick="NavigateToProfile">
            <img alt="profile page" src="icons/user.svg">
        </div>
        <div class="nav-img-container" @onclick="CreateAPlace">
            <img alt="map page" src="icons/map.svg">
        </div>
    </div>
    <div class="navigation-right">
        <div class="nav-img-container" @onclick="PerformLogout">
            <img alt="logout button" src="icons/logout.svg">
        </div>
    </div>
</div>

@code {

    private void PerformLogout()
    {
        ((CustomAuthenticationStateProvider) _authenticationStateProvider).Logout();
        _navigationManager.NavigateTo("/");
    }

    private void NavigateToLogin()
    {
        _navigationManager.NavigateTo("/login");
    }

    private void NavigateToRegister()
    {
        _navigationManager.NavigateTo("/register");
    }

    private void NavigateToProfile()
    {
        _navigationManager.NavigateTo("/profile");
    }

    private void CreateAPlace()
    {
        _navigationManager.NavigateTo("/createPlace");
    }

    private void NewsFeedRedirect()
    {
        _navigationManager.NavigateTo("/newsFeed");
    }
}