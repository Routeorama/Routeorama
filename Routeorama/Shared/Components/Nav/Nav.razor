@using Routeorama.Authentication
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<nav class="navigation">
    <ul>
        <li>
            <a href="/NewsFeed">Logo</a>
        </li>
        <li>
            <Search/>
        </li>
        <AuthorizeView>
            <Authorized>
                <li style="float:right">
                    <a href="/" @onclick="PerformLogout">
                        Log out
                    </a>
                </li>
                <li style="float:right">
                    <a href="/">Profile</a>
                </li>
                <li style="float:right">
                    <a href="/createPlace">Create a Place</a>
                </li>
            </Authorized>
            <NotAuthorized>
                <li style="float:right">
                    <a href="/login">Login</a>
                </li>
                <li style="float:right">
                    <a href="/register">Sign up</a>
                </li>
            </NotAuthorized>
        </AuthorizeView>
    </ul>
</nav>

@code {

    public async Task PerformLogout()
    {
        ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
    }
    private void NavigateToLogin()
    {
        _navigationManager.NavigateTo("/login");
    }
    private void NavigateToRegister()
    {
        _navigationManager.NavigateTo("/register");
    }
    private void NavigateToMain()
    {
        _navigationManager.NavigateTo("/");
    }
    private void CreateAPlace()
    {
        _navigationManager.NavigateTo("/createPlace");
    }
}