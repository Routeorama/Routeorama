@namespace LoginComponent
@using Routeorama.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<div class="logincontainer">
    <h3>Login</h3>
    
    <label class="loginlabel">Username</label>
    <div class="username-placeholder">
        <input type="text" placeholder="user name" @bind-value="username"/>
    </div>

    <label class="loginlabel">Password</label>
    <div class="password-placeholder">
        <input type="password" placeholder="password" @bind-value="password"/>
    </div>
    
    <div class="button-placeholder">
        <a class="login-button" href="/NewsFeed" @onclick="PerformLogin">
            Login
        </a>
        <a class="register-button" href="/register">
            Register
        </a>
    </div>
    
    <div class="errorLabel">@errorMessage</div>
</div>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}